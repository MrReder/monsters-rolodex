{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/title/title.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","Title","titleText","App","e","setState","searchField","target","value","state","fetch","then","resp","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGaA,EAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHTC,G,MAAW,SAACR,GAErB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCH7CM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OAAO,uBACPZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCNDG,EAAQ,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACnB,OAAO,6BAAKA,KCqCDC,G,wDAjCb,aAAe,IAAD,8BACZ,gBAcJL,aAAe,SAACM,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJH,E,qDAShB,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACX,SAAUoB,S,oBAOxC,WACE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,YACZU,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAClD,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,CAAOgB,UAAU,oBACjB,cAAC,EAAD,CAAWL,YAAY,iBAAiBC,aAAciB,KAAKjB,eAC3D,cAAC,EAAD,CAAUJ,SAAUsB,W,GA7BVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a8300ba1.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../card/card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div> \r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport '../card-list/card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    \r\n    return <div className=\"card-list\">\r\n        {props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)}\r\n    </div>;\r\n    \r\n}","import React from \"react\";\r\nimport '../search-box/search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return <input \r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n    \r\n    \r\n    \r\n    \r\n} ","import React from \"react\";\r\n\r\n\r\nexport const Title = ({titleText}) => {\r\n    return <h1>{titleText}</h1>\r\n    \r\n    \r\n    \r\n    \r\n} ","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox}  from './components/search-box/search-box.component';\nimport { Title } from './components/title/title.component';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor (){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n}\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(resp => resp.json())\n  .then(users => this.setState({monsters: users}))\n}\n\nhandleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <Title titleText=\"Monster Rolodex\"/>\n        <SearchBox placeholder=\"search monster\" handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}